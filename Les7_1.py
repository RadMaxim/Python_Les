import cv2
cap=cv2.VideoCapture(0)
RED = ((0,139,144),(11,255,226))
YELLOW = ((15,139,144),(34,255,226))
def nothing(self):
   pass
cv2.namedWindow("filter")
cv2.createTrackbar("Hue","filter",0,255,nothing)
cv2.createTrackbar("Saturation","filter",0,255,nothing)
cv2.createTrackbar("Value","filter",0,255,nothing)
cv2.createTrackbar("HueH","filter",0,255,nothing)
cv2.createTrackbar("SaturationH","filter",0,255,nothing)
cv2.createTrackbar("ValueH","filter",0,255,nothing)
while True:
   ret,frame=cap.read()
   hsv=cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)
   h_l=cv2.getTrackbarPos("Hue","filter")
   s_l=cv2.getTrackbarPos("Saturation","filter")
   v_l=cv2.getTrackbarPos("Value","filter")
   h_h = cv2.getTrackbarPos("HueH", "filter")
   s_h = cv2.getTrackbarPos("SaturationH", "filter")
   v_h = cv2.getTrackbarPos("ValueH", "filter")
   lower=(h_l,s_l,v_l)
   higher=(h_h,s_h,v_h)
   mask = cv2.inRange(hsv, lower, higher)
   mask_forRed = cv2.inRange(hsv, RED[0], RED[1])
   mask_forYellow = cv2.inRange(hsv, RED[0], RED[1])
   contours, hierarchy = cv2.findContours(mask, cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)
   print(len(contours))
   print(hierarchy)
   for contour in contours:
      area = cv2.contourArea(contour)
      if area > 900:
         x, y, w, h = cv2.boundingRect(contour)
         frame = cv2.rectangle(frame, (x, y), (x + w, y + h), (255, 0, 0), 2)
   res=cv2.bitwise_and(frame,frame,mask=mask)
   final = cv2.hconcat([frame,res])
   cv2.imshow("filter",final)
   cv2.imshow("mask",mask)
   cv2.waitKey(1)